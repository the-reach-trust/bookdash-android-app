apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion = rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId = "org.bookdash.android"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode = rootProject.ext.versionCode
        versionName = rootProject.ext.versionName
        testInstrumentationRunner "org.bookdash.android.presentation.CustomTestRunner"
        resConfigs "en"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    File signFile = rootProject.file('release-keystore.properties')
    if (signFile.exists()) {
        signingConfigs {
            release {
                def props = new Properties()

                props.load(new FileInputStream(signFile))

                storeFile rootProject.file(props.keyStore)
                storePassword props.keyStorePassword
                keyAlias props.keyAlias
                keyPassword props.keyAliasPassword
            }
        }
        buildTypes.release.signingConfig signingConfigs.release
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'

        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'LICENSE.txt'
    }

    flavorDimensions.add("env")
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    // Avoid crash on platform method calls that's not mocked. E.g. FirebaseCrashlytics.
    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }
    }

    play {
        jsonFile = rootProject.file('google-play-keys.json')
        track = "${track}"
    }
    namespace 'org.bookdash.android'
}
dependencies {

    implementation 'com.google.firebase:firebase-storage-ktx:21.0.1'
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testImplementation("org.powermock:powermock-module-junit4:2.0.7")
    testImplementation("org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito")

    // Android Testing Library's runner and rules
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'

    // Espresso UI Testing
    androidTestImplementation('androidx.test.espresso:espresso-core:3.6.1') {
        exclude group: "javax.inject"
    }
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.6.1'
    androidTestImplementation 'androidx.appcompat:appcompat:1.7.0'
    androidTestImplementation "com.google.android.material:material:$rootProject.ext.materialVersion"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.github.castorflex.smoothprogressbar:library-circular:1.3.0'

    // Import the Firebase Bill of Materials (BoM)
    implementation platform('com.google.firebase:firebase-bom:33.1.2')

    // Firebase Dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-storage'

    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.2.5'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.drawerlayout:drawerlayout:1.2.0"
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"


    implementation project(path: ':materialhelptutorial')
    implementation project(path: ':fabbutton')
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'